filter(speaker_id == 1327, stem != '')
data <- filtered_tokens %>%
group_by(speaker_id, speaker_age) %>%
summarise(num_tokens=n(), num_types=n_distinct(stem))
# save 30 as constant up front
# change interval to age in whatever unit
UNIT_TIME <- 30
latent_vocab_size <- data %>%
#filter(speaker_age < 1600) %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME)) %>%
group_by(speaker_id, speaker_age) %>%
summarise(estimate = estimate_latent_vocab_size3(num_types, num_tokens))
cumulative_vocab_size <- filtered_tokens %>%
#filter(speaker_age < 1600) %>%
group_by(speaker_id, stem) %>%
summarise(speaker_age = floor(min(speaker_age) / UNIT_TIME)) %>%
group_by(speaker_id, speaker_age) %>%
summarise(num_word_births = n()) %>%
rename(cumulative = num_word_births)
cumulative_vocab_size$cumulative %<>% cumsum
combined <- left_join(cumulative_vocab_size, latent_vocab_size)
ggplot(combined, aes(estimate, cumulative)) +
geom_point() +
xlab("Latent number of types") +
ylab("Cumulative number of types")
ethan_combined <- combined
filtered_tokens <- tokens %>%
filter(speaker_id == 1373, stem != '')
data <- filtered_tokens %>%
group_by(speaker_id, speaker_age) %>%
summarise(num_tokens=n(), num_types=n_distinct(stem))
# save 30 as constant up front
# change interval to age in whatever unit
UNIT_TIME <- 30
latent_vocab_size <- data %>%
#filter(speaker_age < 1600) %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME)) %>%
group_by(speaker_id, speaker_age) %>%
summarise(estimate = estimate_latent_vocab_size3(num_types, num_tokens))
cumulative_vocab_size <- filtered_tokens %>%
#filter(speaker_age < 1600) %>%
group_by(speaker_id, stem) %>%
summarise(speaker_age = floor(min(speaker_age) / UNIT_TIME)) %>%
group_by(speaker_id, speaker_age) %>%
summarise(num_word_births = n()) %>%
rename(cumulative = num_word_births)
cumulative_vocab_size$cumulative %<>% cumsum
combined <- left_join(cumulative_vocab_size, latent_vocab_size)
ggplot(combined, aes(estimate, cumulative)) +
geom_point() +
xlab("Latent number of types") +
ylab("Cumulative number of types")
combined.long <- melt(combined, id="speaker_age", measure=c("cumulative", "estimate"))
ggplot(combined.long, aes(speaker_age, value, color=variable)) +
geom_point() +
xlab("Age") +
ylab("Cumulative number of types")
combined
william_combined <- combined
data
select(data, speaker_id, num_types) %>%
left_join(combined)
dplyr::select(data, speaker_id, num_types) %>%
left_join(combined)
word_births
ggplot(word_births,
aes(x = age_mo/12, y = num_word_births)) +
geom_point() +
geom_smooth() +
facet_wrap(~speaker_name) +
geom_vline(data = max_births,
aes(xintercept = age_mo/12), lty = 2, col = "red") +
xlab("Age (years)") +
ylab("Number of new word types observed") +
ylim(0,400)
c2 <- dplyr::select(data, speaker_id, num_types) %>%
left_join(combined)
ggplot(c2, aes(num_types, cumulative)) +
geom_point() +
# facet_wrap(~speaker_name) +
xlab("Latent number of types") +
ylab("Cumulative number of types")
ggplot(combined, aes(estimate, cumulative)) +
geom_point() +
xlab("Latent number of types") +
ylab("Cumulative number of types")
dplyr::select(data, speaker_id, num_types) %>%
left_join(combined)
data
dplyr::select(data, speaker_id, num_types) %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME)) %>%
dplyr::select(data, speaker_id, num_types) %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME))
dplyr::select(data, speaker_id, speaker_age, num_types) %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME))
c2 <- dplyr::select(data, speaker_id, speaker_age, num_types) %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME)) %>%
left_join(combined)
ggplot(c2, aes(num_types, cumulative)) +
geom_point() +
# facet_wrap(~speaker_name) +
xlab("num types") +
ylab("Cumulative number of types")
filtered_tokens <- tokens %>%
filter(speaker_id == 554, stem != '')
data <- filtered_tokens %>%
group_by(speaker_id, speaker_age) %>%
summarise(num_tokens=n(), num_types=n_distinct(stem))
c2 <- dplyr::select(data, speaker_id, speaker_age, num_types) %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME)) %>%
left_join(sarah_combined)
ggplot(c2, aes(num_types, cumulative)) +
geom_point() +
# facet_wrap(~speaker_name) +
xlab("num types") +
ylab("Cumulative number of types")
filtered_tokens <- tokens %>%
filter(speaker_id == 532, stem != '')
data <- filtered_tokens %>%
group_by(speaker_id, speaker_age) %>%
summarise(num_tokens=n(), num_types=n_distinct(stem))
c2 <- dplyr::select(data, speaker_id, speaker_age, num_types) %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME)) %>%
left_join(sarah_combined)
ggplot(c2, aes(num_types, cumulative)) +
geom_point() +
# facet_wrap(~speaker_name) +
xlab("num types") +
ylab("Cumulative number of types")
data
c2 <- dplyr::select(data, speaker_id, speaker_age, num_types) %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME)) %>%
left_join(adam_combined)
ggplot(c2, aes(num_types, cumulative)) +
geom_point() +
# facet_wrap(~speaker_name) +
xlab("num types") +
ylab("Cumulative number of types")
data
data
# save 30 as constant up front
# change interval to age in whatever unit
UNIT_TIME <- 1
latent_vocab_size <- data %>%
#filter(speaker_age < 1600) %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME)) %>%
group_by(speaker_id, speaker_age) %>%
summarise(estimate = estimate_latent_vocab_size3(num_types, num_tokens))
cumulative_vocab_size <- filtered_tokens %>%
#filter(speaker_age < 1600) %>%
group_by(speaker_id, stem) %>%
summarise(speaker_age = floor(min(speaker_age) / UNIT_TIME)) %>%
group_by(speaker_id, speaker_age) %>%
summarise(num_word_births = n()) %>%
rename(cumulative = num_word_births)
cumulative_vocab_size$cumulative %<>% cumsum
combined <- left_join(cumulative_vocab_size, latent_vocab_size)
ggplot(combined, aes(estimate, cumulative)) +
geom_point() +
xlab("Latent number of types") +
ylab("Cumulative number of types")
c2 <- dplyr::select(data, speaker_id, speaker_age, num_types) %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME)) %>%
left_join(combined)
ggplot(c2, aes(num_types, cumulative)) +
geom_point() +
# facet_wrap(~speaker_name) +
xlab("num types") +
ylab("Cumulative number of types")
dplyr::select(data, speaker_id, speaker_age, num_types) %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME))
dplyr::select(data, speaker_id, speaker_age, num_types) %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME)) %>%
arrange(num_types)
dplyr::select(data, speaker_id, speaker_age, num_types) %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME)) %>%
arrange(speaker_age)
dplyr::select(data, speaker_id, speaker_age, num_types) %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME)) %>%
# arrange(speaker_age)
left_join(combined)
adam_combined_days <- combined
kids = read_csv('~/Documents/R/data/child_utt_counts.csv')
tokens_num_word_birth
tokens_filtered
tokens_num_word_birth <- tokens_word_birth %>%
group_by(speaker_id, speaker_name, age) %>%
summarise(num_word_births=n())
tokens_num_word_birth
tokens = read_csv('tokens2.csv')
tokens_filtered <- tokens %>%
filter(stem != '') %>%
rename(pos = part_of_speech, new_word=stem)
tokens_filtered
tokens_filtered <- tokens %>%
filter(stem != '') %>%
rename(pos = part_of_speech, new_word=stem) %>%
group_by(speaker_id, speaker_age) %>%
summarise(total_utt=n_distinct())
tokens_filtered <- tokens %>%
filter(stem != '') %>%
rename(pos = part_of_speech, new_word=stem) %>%
group_by(speaker_id, speaker_age) %>%
summarise(total_utt=n_distinct(utterance_id))
tokens_filtered
tokens_filtered <- tokens %>%
filter(stem != '') %>%
rename(pos = part_of_speech, new_word=stem) %>%
group_by(speaker_id, speaker_age) %>%
summarise(total_utt=n_distinct(utterance_id)) %>%
ungroup()
tokens_filtered
tokens_filtered <- tokens %>%
filter(stem != '') %>%
rename(pos = part_of_speech, new_word=stem) %>%
group_by(speaker_id, speaker_age) %>%
summarise(total_utt=n_distinct(utterance_id)) %>%
ungroup() %>%
left_join(tokens)
tokens_filtered
tokens_filtered <- tokens %>%
filter(stem != '') %>%
rename(pos = part_of_speech, new_word=stem)
total_utt <- tokens %>%
filter(stem != '') %>%
rename(pos = part_of_speech, new_word=stem) %>%
group_by(speaker_id, speaker_age) %>%
summarise(total_utt=n_distinct(utterance_id)) %>%
ungroup()
total_utt
tokens_filtered
total_utt
tokens_num_word_birth
tokens_word_birth %>%
group_by(speaker_id, speaker_name, age) %>%
summarise(num_word_births=n()) %>%
left_join(total_utt)
tokens_filtered <- tokens %>%
filter(stem != '') %>%
rename(pos = part_of_speech, new_word=stem)
total_utt <- tokens %>%
filter(stem != '') %>%
rename(pos = part_of_speech, new_word=stem) %>%
group_by(speaker_id, speaker_age) %>%
summarise(total_utt=n_distinct(utterance_id)) %>%
ungroup() %>%
rename(age=speaker_age)
tokens_num_word_birth <- tokens_word_birth %>%
group_by(speaker_id, speaker_name, age) %>%
summarise(num_word_births=n()) %>%
left_join(total_utt)
tokens_word_birth %>%
group_by(speaker_id, speaker_name, age) %>%
summarise(num_word_births=n()) %>%
left_join(total_utt)
ggplot(combined, aes(estimate, cumulative)) +
geom_point() +
xlab("Latent number of types") +
ylab("Cumulative number of types")
combined2 <- dplyr::select(data, speaker_id, speaker_age, num_types) %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME)) %>%
left_join(combined)
ggplot(combined2, aes(num_types, cumulative)) +
geom_point() +
xlab("num types") +
ylab("Cumulative number of types")
tokens_word_birth %>%
group_by(speaker_id, speaker_name, age) %>%
summarise(num_word_births=n()) %>%
left_join(total_utt)
total_utt
total_utt <- tokens %>%
filter(stem != '') %>%
rename(pos = part_of_speech, new_word=stem) %>%
group_by(speaker_id, speaker_name, speaker_age) %>%
summarise(total_utt=n_distinct(utterance_id)) %>%
ungroup() %>%
rename(age=speaker_age)
total_utt
tokens_word_birth %>%
group_by(speaker_id, speaker_name, age) %>%
summarise(num_word_births=n())
total_utt <- tokens %>%
filter(stem != '') %>%
rename(pos = part_of_speech, new_word=stem) %>%
group_by(speaker_id, speaker_name, speaker_age) %>%
summarise(total_utt=n_distinct(utterance_id)) %>%
ungroup() %>%
rename(age=speaker_age) %>%
mutate(age = age / 30)
total_utt
tokens_word_birth %>%
group_by(speaker_id, speaker_name, age) %>%
summarise(num_word_births=n())
tokens_word_birth %>%
group_by(speaker_id, speaker_name, age) %>%
summarise(num_word_births=n()) %>%
left_join(total_utt)
word_births
word_births <- tokens_num_word_birth %>%
# filter(speaker_id %in% child_utt_counts$speaker_id[child_utt_counts$utt_count >
#                                                      utt_threshold]) %>%
filter(speaker_id %in% included_kids$speaker_id) %>%
mutate(age_mo = floor(age)) %>%
group_by(speaker_name, age_mo) %>%
summarise(num_word_births = sum(num_word_births))
word_births
tokens_num_word_birth
tokens_num_word_birth <- tokens_word_birth %>%
group_by(speaker_id, speaker_name, age) %>%
summarise(num_word_births=n()) %>%
left_join(total_utt)
tokens_num_word_birth
tokens_num_word_birth %>%
# filter(speaker_id %in% child_utt_counts$speaker_id[child_utt_counts$utt_count >
#                                                      utt_threshold]) %>%
filter(speaker_id %in% included_kids$speaker_id) %>%
mutate(age_mo = floor(age)) %>%
group_by(speaker_name, age_mo) %>%
summarise(num_word_births = sum(num_word_births))
tokens_num_word_birth
tokens_num_word_birth %>%
# filter(speaker_id %in% child_utt_counts$speaker_id[child_utt_counts$utt_count >
#                                                      utt_threshold]) %>%
filter(speaker_id %in% included_kids$speaker_id) %>%
mutate(age_mo = floor(age)) %>%
group_by(speaker_name, age_mo) %>%
summarise(num_word_births = sum(num_word_births))
tokens_num_word_birth %>%
# filter(speaker_id %in% child_utt_counts$speaker_id[child_utt_counts$utt_count >
#                                                      utt_threshold]) %>%
filter(speaker_id %in% included_kids$speaker_id) %>%
mutate(age_mo = floor(age)) %>%
group_by(speaker_name, age_mo) %>%
summarise(num_word_births = sum(num_word_births), total_utt=sum(total_utt))
word_births <- tokens_num_word_birth %>%
# filter(speaker_id %in% child_utt_counts$speaker_id[child_utt_counts$utt_count >
#                                                      utt_threshold]) %>%
filter(speaker_id %in% included_kids$speaker_id) %>%
mutate(age_mo = floor(age)) %>%
group_by(speaker_name, age_mo) %>%
summarise(num_word_births = sum(num_word_births), total_utt=sum(total_utt))
ggplot(word_births,
aes(x = age_mo/12, y = num_word_births / total_utt)) +
geom_point() +
geom_smooth() +
facet_wrap(~speaker_name) +
geom_vline(data = max_births,
aes(xintercept = age_mo/12), lty = 2, col = "red") +
xlab("Age (years)") +
ylab("Number of new word types observed") +
ylim(0,400)
word_births
combined2 <- dplyr::select(data, speaker_id, speaker_age, num_types) %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME)) %>%
left_join(combined)
ggplot(combined2, aes(num_types, cumulative)) +
geom_point() +
xlab("num types") +
ylab("Cumulative number of types")
combined2 <- dplyr::select(data, speaker_id, speaker_age, num_types) %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME)) %>%
left_join(combined)
ggplot(combined2, aes(num_types, cumulative)) +
geom_point() +
xlab("num types") +
ylab("Cumulative number of types")
filtered_tokens <- tokens %>%
filter(speaker_id == 547, stem != '')
data <- filtered_tokens %>%
group_by(speaker_id, speaker_age) %>%
summarise(num_tokens=n(), num_types=n_distinct(stem))
filtered_tokens <- tokens %>%
filter(speaker_id == 547, stem != '')
data <- filtered_tokens %>%
group_by(speaker_id, speaker_age) %>%
summarise(num_tokens=n(), num_types=n_distinct(stem))
combined2 <- dplyr::select(data, speaker_id, speaker_age, num_types) %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME)) %>%
left_join(eve_combined)
ggplot(combined2, aes(num_types, cumulative)) +
geom_point() +
xlab("num types") +
ylab("Cumulative number of types")
data <- filtered_tokens %>%
group_by(speaker_id, speaker_age) %>%
summarise(num_tokens=n(), num_types=n_distinct(stem))
filtered_tokens <- tokens %>%
filter(speaker_id == 547, stem != '')
combined2 <- dplyr::select(data, speaker_id, speaker_age, num_types) %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME)) %>%
left_join(eve_combined)
ggplot(combined2, aes(num_types, cumulative)) +
geom_point() +
xlab("num types") +
ylab("Cumulative number of types")
sarah_combined
get_LL <- function(observations) {
LL <- function(v) {
a <- v[1L]
N <- v[2L]
get_q <- function(a, N, M) {
q <- 1-(1-(1:N)^-a)^M
q
}
result <- observations %>%
rowwise() %>%
mutate(logprob = dpoibin(num_types, get_q(a, N, num_tokens)))
-sum(log(result$logprob))
}
}
estimate_latent_vocab_size <- function(num_types, num_tokens) {
observations <- tibble(num_types, num_tokens)
fn <- get_LL(observations)
levels <- list(c(1.3), seq(100, 2200, 50))
sol <- gridSearch(fn, levels, method="multicore")
print(sol$minlevels[1])
sol$minlevels[2]
}
UNIT_TIME <- 30
latent_vocab_size <- data %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME)) %>%
group_by(speaker_id, speaker_age) %>%
summarise(estimate = estimate_latent_vocab_size(num_types, num_tokens))
cumulative_vocab_size <- filtered_tokens %>%
group_by(speaker_id, stem) %>%
summarise(speaker_age = floor(min(speaker_age) / UNIT_TIME)) %>%
group_by(speaker_id, speaker_age) %>%
summarise(num_word_births = n()) %>%
rename(cumulative = num_word_births)
cumulative_vocab_size$cumulative %<>% cumsum
combined <- left_join(cumulative_vocab_size, latent_vocab_size)
combined2 <- dplyr::select(data, speaker_id, speaker_age, num_types) %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME)) %>%
left_join(eve_combined)
ggplot(combined2, aes(num_types, cumulative)) +
geom_point() +
xlab("num types") +
ylab("Cumulative number of types")
UNIT_TIME <- 1
latent_vocab_size <- data %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME)) %>%
group_by(speaker_id, speaker_age) %>%
summarise(estimate = estimate_latent_vocab_size(num_types, num_tokens))
cumulative_vocab_size <- filtered_tokens %>%
group_by(speaker_id, stem) %>%
summarise(speaker_age = floor(min(speaker_age) / UNIT_TIME)) %>%
group_by(speaker_id, speaker_age) %>%
summarise(num_word_births = n()) %>%
rename(cumulative = num_word_births)
cumulative_vocab_size$cumulative %<>% cumsum
combined <- left_join(cumulative_vocab_size, latent_vocab_size)
combined2 <- dplyr::select(data, speaker_id, speaker_age, num_types) %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME)) %>%
left_join(eve_combined)
ggplot(combined2, aes(num_types, cumulative)) +
geom_point() +
xlab("num types") +
ylab("Cumulative number of types")
combined2 <- dplyr::select(data, speaker_id, speaker_age, num_types) %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME)) %>%
left_join(combined)
ggplot(combined2, aes(num_types, cumulative)) +
geom_point() +
xlab("num types") +
ylab("Cumulative number of types")
UNIT_TIME <- 1
latent_vocab_size <- data %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME)) %>%
group_by(speaker_id, speaker_age) %>%
summarise(estimate = estimate_latent_vocab_size(num_types, num_tokens))
cumulative_vocab_size <- filtered_tokens %>%
group_by(speaker_id, stem) %>%
summarise(speaker_age = floor(min(speaker_age) / UNIT_TIME)) %>%
group_by(speaker_id, speaker_age) %>%
summarise(num_word_births = n()) %>%
rename(cumulative = num_word_births)
cumulative_vocab_size$cumulative %<>% cumsum
combined <- left_join(cumulative_vocab_size, latent_vocab_size)
combined2 <- dplyr::select(data, speaker_id, speaker_age, num_types) %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME)) %>%
left_join(combined)
ggplot(combined2, aes(num_types, cumulative)) +
geom_point() +
xlab("num types") +
ylab("Cumulative number of types")
data
data
tokens
filtered_tokens
filtered_tokens$speaker_age
hist(filtered_tokens$speaker_age)
hist(filtered_tokens$speaker_age, binwidth = 1)
qplot(filtered_tokens$speaker_age, binwidth = 1)
ggplot(filtered_tokens, aes(x = speaker_agebinwidth) + geom_histogram(binwidth = )
ggplot(filtered_tokens, aes(x = speaker_agebinwidth) + geom_histogram(binwidth = 2)
ggplot(filtered_tokens, aes(x = speaker_agebinwidth)) + geom_histogram(binwidth = 2)
ggplot(filtered_tokens, aes(x = speaker_age)) + geom_histogram(binwidth = 2)
ggplot(filtered_tokens, aes(x = speaker_age)) + geom_histogram(binwidth = 1)
combined2 <- dplyr::select(data, speaker_id, speaker_age, num_types) %>%
mutate(speaker_age = floor(speaker_age / UNIT_TIME)) %>%
left_join(combined)
ggplot(combined2, aes(num_types, cumulative)) +
geom_point() +
xlab("num types") +
ylab("Cumulative number of types")
ggplot(combined, aes(estimate, cumulative)) +
geom_point() +
xlab("Latent number of types") +
ylab("Cumulative number of types")
shiny::runApp('Github/shiny-app-childfreq')
runApp('Github/shiny-app-childfreq')
